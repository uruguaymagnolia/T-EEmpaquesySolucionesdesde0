diff --git a/node_modules/@radix-ui/react-avatar/dist/index.mjs b/node_modules/@radix-ui/react-avatar/dist/index.mjs
index 4758742..cf80231 100644
--- a/node_modules/@radix-ui/react-avatar/dist/index.mjs
+++ b/node_modules/@radix-ui/react-avatar/dist/index.mjs
@@ -1,10 +1,10 @@
 import { createContextScope } from "@radix-ui/react-context";
-import { useComposedRefs } from "@radix-ui/react-compose-refs";
-import { useState, useCallback,useEffect } from "react";
+import { useComposedRefs } from "@radix-ui/react-compose-refs";;
+import { useState, useCallback, useEffect, useMemo } from "react";
 import { useLayoutEffect } from "@radix-ui/react-use-layout-effect";
 import { Primitive } from "@radix-ui/react-primitive";
-import { useIsHydrated } from "@radix-ui/react-use-is-hydrated";
 import { jsx } from "react/jsx-runtime";
+
 var AVATAR_NAME = "Avatar";
 var [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);
 var [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);
@@ -49,6 +49,14 @@
   return status;
 }
 var AvatarImage = /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
+  const [isHydrated, setIsHydrated] = useState(false);
+
+  useEffect(() => {
+    if (typeof window !== "undefined") {
+      setIsHydrated(true);
+    }
+  }, []);
+
   const { __scopeAvatar, src, onLoadingStatusChange = () => {
   }, ...imageProps } = props;
   const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);
@@ -58,7 +66,7 @@
   React.useEffect(() => {
     onLoadingStatusChange(loadingStatus);
   }, [onLoadingStatusChange, loadingStatus]);
-  return isHydrated && loadingStatus === "loaded" ? /* @__PURE__ */ jsx(
+  return isHydrated && loadingStatus === "loaded" ? /* @__PURE__ */ jsx( 
     Primitive.img,
     {
       ...imageProps,
